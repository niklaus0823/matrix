import {RpcApplication, WrappedHandler} from 'matrixes-lib';

{{#each services}}
import {
{{#each this.protoService}}
    {{@key}}Service,
{{/each}}
} from '{{{this.protoServiceImportPath}}}';
{{/each}}

{{#each services}}
{{#each this.protoService}}
{{#each this}}
import {{curlyLeft}}{{{this}}}Handler{{curlyRight}} from './{{#eq ../../this.protoFile.relativePath '.'}}{{else}}{{../../this.protoFile.relativePath}}/{{/eq}}{{../../this.protoFile.pbSvcNamespace}}/{{@../key}}/{{{this}}}';
{{/each}}
{{/each}}
{{/each}}

export const registerServices = function (app: RpcApplication) {
{{#each services}}
{{#each this.protoService}}
    app.server.addService({{@key}}Service, {
    {{#each this}}
        {{{this}}}: async (call, callback) => {
            let wrappedHandler: WrappedHandler = app.wrapGrpcHandler({{{this}}}Handler);
            wrappedHandler(call, callback).then(_ => _);
        },
    {{/each}}
    });
{{/each}}
{{/each}}
};


